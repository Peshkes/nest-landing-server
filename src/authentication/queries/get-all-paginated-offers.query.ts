import mongoose from "mongoose";
import { UserDocument } from "../persistence/user.schema";

export const getAllPaginatedOffersQuery = async (
  userId: string,
  roles: string[],
  statuses: string[],
  page: number = 0,
  limit: number = 10,
) => {
  const pipeline: any[] = [];

  // üîπ –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥–µ–º —Å–æ–±–∏—Ä–∞—Ç—å
  const offersArrays: any[] = [];

  // === üè† 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ –æ—Ñ—Ñ–µ—Ä—ã ===
  if (roles.includes("owner")) {
    pipeline.push(
      {
        $match: { _id: userId }, // ‚úÖ userId —Ç–µ–ø–µ—Ä—å —Å—Ç—Ä–æ–∫–∞ (UUID)
      },
      {
        $lookup: {
          from: "users",
          localField: "_id",
          foreignField: "_id",
          as: "user",
        },
      },
      { $unwind: "$user" },
    );

    if (statuses.includes("public")) {
      offersArrays.push("$user.public_offers"); // –ü—É–±–ª–∏—á–Ω—ã–µ –æ—Ñ—Ñ–µ—Ä—ã —é–∑–µ—Ä–∞
    }
    if (statuses.includes("draft")) {
      offersArrays.push("$user.draft_offers"); // –ß–µ—Ä–Ω–æ–≤–∏–∫–∏ —é–∑–µ—Ä–∞
    }
  }

  // === üè¢ 2. –ó–∞–≥—Ä—É–∂–∞–µ–º –≥—Ä—É–ø–ø—ã, –∫ –∫–æ—Ç–æ—Ä—ã–º —É —é–∑–µ—Ä–∞ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø ===
  if (roles.some((role) => ["admin", "moderator", "user"].includes(role))) {
    pipeline.push({
      $lookup: {
        from: "groupaccesses",
        let: { userId },
        pipeline: [
          { $match: { $expr: { $eq: ["$user_id", "$$userId"] } } }, // ‚úÖ UUID —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç—Å—è –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞
          { $match: { role: { $in: roles } } },
          {
            $lookup: {
              from: "groups",
              localField: "group_id",
              foreignField: "_id",
              as: "group",
            },
          },
          { $unwind: "$group" },
        ],
        as: "group_access",
      },
    });

    if (statuses.includes("public")) {
      offersArrays.push("$group_access.group.public_offers"); // –ü—É–±–ª–∏—á–Ω—ã–µ –æ—Ñ—Ñ–µ—Ä—ã –≥—Ä—É–ø–ø
    }
    if (statuses.includes("draft")) {
      offersArrays.push("$group_access.group.draft_offers"); // –ß–µ—Ä–Ω–æ–≤–∏–∫–∏ –≥—Ä—É–ø–ø
    }
  }

  // üîπ –ï—Å–ª–∏ –Ω–µ—Ç —Å—Ç–∞—Ç—É—Å–æ–≤, –±–µ—Ä–µ–º –≤—Å—ë
  if (statuses.length === 0) {
    offersArrays.push("$user.public_offers", "$user.draft_offers", "$group_access.group.public_offers", "$group_access.group.draft_offers");
  }

  // === üîÑ 3. –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –æ—Ñ—Ñ–µ—Ä—ã ===
  pipeline.push({
    $project: {
      offers: { $concatArrays: offersArrays },
    },
  });

  // === üîÑ 4. –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –º–∞—Å—Å–∏–≤ –æ—Ñ—Ñ–µ—Ä–æ–≤ ===
  pipeline.push({ $unwind: "$offers" });

  // === üîÑ 5. –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ ===
  pipeline.push({ $sort: { "offers.updatedAt": -1 } });

  // === üîÑ 6. –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é ===
  pipeline.push({ $skip: page * limit }, { $limit: limit });

  return await mongoose.connection.db
    .collection(UserDocument.name) // ‚úÖ –ó–∞–ø—Ä–æ—Å –∏–¥–µ—Ç —á–µ—Ä–µ–∑ –∫–æ–ª–ª–µ–∫—Ü–∏—é "users"
    .aggregate(pipeline)
    .toArray();
};
